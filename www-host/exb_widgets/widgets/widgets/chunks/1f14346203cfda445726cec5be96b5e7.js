"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[8271],{81739:(e,t,r)=>{r.d(t,{Z:()=>y});var i=r(36663),s=r(6865),a=(r(67979),r(70375),r(13802),r(65449),r(63235)),l=r(81977),o=r(40266);let n=class extends s.Z{constructor(e){super(e),this.getCollections=null}initialize(){this.addHandles((0,a.EH)((()=>this._refresh())))}destroy(){this.getCollections=null}_refresh(){const e=null!=this.getCollections?this.getCollections():null;if(null==e)return void this.removeAll();let t=0;for(const r of e)null!=r&&(t=this._processCollection(t,r));this.splice(t,this.length)}_createNewInstance(e){return new s.Z(e)}_processCollection(e,t){if(!t)return e;const r=this.itemFilterFunction??(e=>!!e);for(const i of t)if(i){if(r(i)){const t=this.indexOf(i,e);t>=0?t!==e&&this.reorder(i,e):this.add(i,e),++e}if(this.getChildrenFunction){const t=this.getChildrenFunction(i);if(Array.isArray(t))for(const r of t)e=this._processCollection(e,r);else e=this._processCollection(e,t)}}return e}};(0,i._)([(0,l.Cb)()],n.prototype,"getCollections",void 0),(0,i._)([(0,l.Cb)()],n.prototype,"getChildrenFunction",void 0),(0,i._)([(0,l.Cb)()],n.prototype,"itemFilterFunction",void 0),n=(0,i._)([(0,o.j)("esri.core.CollectionFlattener")],n);const y=n},63592:(e,t,r)=>{r.d(t,{G:()=>l,w:()=>o});var i=r(67979),s=r(6865),a=r(68309);async function l(e,t){return await e.load(),o(e,t)}async function o(e,t){const r=[],l=(...e)=>{for(const t of e)null!=t&&(Array.isArray(t)?l(...t):s.Z.isCollection(t)?t.forEach((e=>l(e))):a.Z.isLoadable(t)&&r.push(t))};t(l);let o=null;if(await(0,i.UI)(r,(async e=>{const t=await(0,i.q6)(function(e){return"loadAll"in e&&"function"==typeof e.loadAll}(e)?e.loadAll():e.load());!1!==t.ok||o||(o=t)})),o)throw o.error;return e}},81432:(e,t,r)=>{r.d(t,{O:()=>m});var i=r(36663),s=r(66341),a=r(86114),l=r(33926),o=r(3466),n=r(26139),y=r(81977),u=(r(7283),r(7753),r(39994),r(34248)),p=r(40266),d=r(65943),c=r(91772),h=r(14685),f=r(20692),b=r(51599),g=r(31370);const m=e=>{let t=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(e,t){const r=t.capabilities&&t.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!r)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const i=this.type,s="tile"!==i&&!!t.supportsDynamicLayers,a=r.includes("query"),l=r.includes("map"),o=!!t.exportTilesAllowed,y=r.includes("tilemap"),u=r.includes("data"),p="tile"!==i&&(!t.tileInfo||s),d="tile"!==i&&(!t.tileInfo||s),c="tile"!==i,h=t.cimVersion&&n.G.parse(t.cimVersion),f=h?.since(1,4)??!1,b=h?.since(2,0)??!1;return{operations:{supportsExportMap:l,supportsExportTiles:o,supportsIdentify:a,supportsQuery:u,supportsTileMap:y},exportMap:l?{supportsArcadeExpressionForLabeling:f,supportsSublayersChanges:c,supportsDynamicLayers:s,supportsSublayerVisibility:p,supportsSublayerDefinitionExpression:d,supportsCIMSymbols:b}:null,exportTiles:o?{maxExportTilesCount:+t.maxExportTilesCount}:null}}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("capabilities")||t.hasOwnProperty("tables")?10:t.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),r}async fetchRelatedService(e){const t=this.portalItem;if(!t||!(0,g.Fj)(t))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=t.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},e).then((e=>e.find((e=>"Feature Service"===e.type))??null),(()=>null)));const r=await this._relatedFeatureServicePromise;return(0,l.k_)(e),r?{itemId:r.id,url:r.url}:null}async fetchSublayerInfo(e,t){const{source:r}=e;if(this?.portalItem&&"tile"===this.type&&"map-layer"===r?.type&&(0,g.Fj)(this.portalItem)&&e.originIdOf("url")<d.s3.SERVICE){const i=await this.fetchRelatedService(t);i&&(e.url=(0,o.v_)(i.url,r.mapLayerId.toString()),e.layerItemId=i.itemId)}const{url:i}=e;let a;if("data-layer"===r.type)a=(await(0,s.Z)(i,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...t})).data;else if(i&&e.originIdOf("url")>d.s3.SERVICE)try{const e=await this._fetchAllLayersAndTablesFromService(i),t=(0,f.Qc)(i)?.sublayer??r.mapLayerId;a=e.get(t)}catch{}else{let i=e.id;"map-layer"===r?.type&&(i=r.mapLayerId);try{a=(await this.fetchAllLayersAndTables(t)).get(i)}catch{}}return a}async fetchAllLayersAndTables(e){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,e)}async _fetchAllLayersAndTablesFromService(e,t){await this.load(t),this._allLayersAndTablesMap||=new Map;const r=(0,f.Qc)(e),i=(0,a.s1)(this._allLayersAndTablesMap,r?.url.path,(()=>(0,s.Z)((0,o.v_)(r?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then((e=>{const t=new Map;for(const r of e.data.layers)t.set(r.id,r);return{result:t}}),(e=>({error:e}))))),n=await i;if((0,l.k_)(t),"result"in n)return n.result;throw n.error}};return(0,i._)([(0,y.Cb)({readOnly:!0})],t.prototype,"capabilities",void 0),(0,i._)([(0,u.r)("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],t.prototype,"readCapabilities",null),(0,i._)([(0,y.Cb)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,i._)([(0,y.Cb)({type:c.Z})],t.prototype,"fullExtent",void 0),(0,i._)([(0,y.Cb)(b.id)],t.prototype,"id",void 0),(0,i._)([(0,y.Cb)({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],t.prototype,"legendEnabled",void 0),(0,i._)([(0,y.Cb)(b.C_)],t.prototype,"popupEnabled",void 0),(0,i._)([(0,y.Cb)({type:h.Z})],t.prototype,"spatialReference",void 0),(0,i._)([(0,y.Cb)({readOnly:!0})],t.prototype,"version",void 0),(0,i._)([(0,u.r)("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],t.prototype,"readVersion",null),t=(0,i._)([(0,p.j)("esri.layers.mixins.ArcGISMapService")],t),t}},80002:(e,t,r)=>{r.d(t,{x:()=>m});var i=r(36663),s=r(6865),a=r(81739),l=r(70375),o=r(13802),n=r(76868),y=r(81977),u=(r(7283),r(7753),r(39994),r(95620)),p=r(40266),d=r(65943),c=r(23875),h=r(93698);const f=o.Z.getLogger("esri.layers.TileLayer"),b=s.Z.ofType(c.Z);function g(e,t){e&&e.forEach((e=>{t(e),e.sublayers&&e.sublayers.length&&g(e.sublayers,t)}))}const m=e=>{let t=class extends e{constructor(...e){super(...e),this.allSublayers=new a.Z({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={[d.s3.SERVICE]:{},[d.s3.PORTAL_ITEM]:{},[d.s3.WEB_SCENE]:{},[d.s3.WEB_MAP]:{}},this.addHandles((0,n.YP)((()=>this.sublayers),((e,t)=>this._handleSublayersChange(e,t)),n.Z_))}destroy(){this.allSublayers.destroy()}readSublayers(e,t){if(!t||!e)return;const{sublayersSourceJSON:r}=this,i=(0,d.M9)(t.origin);if(i<d.s3.SERVICE)return;if(r[i]={context:t,visibleLayers:e.visibleLayers||r[i].visibleLayers,layers:e.layers||r[i].layers},i>d.s3.SERVICE)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:s,origin:a}=this.createSublayersForOrigin("web-document"),l=(0,u.vw)(this);l.setDefaultOrigin(a),this._set("sublayers",new b(s)),l.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((t=>t.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const t=(0,d.M9)("web-document"===e?"web-map":e);let r=d.s3.SERVICE,i=this.sublayersSourceJSON[d.s3.SERVICE].layers,s=this.sublayersSourceJSON[d.s3.SERVICE].context,a=null;const l=[d.s3.PORTAL_ITEM,d.s3.WEB_SCENE,d.s3.WEB_MAP].filter((e=>e<=t));for(const e of l){const t=this.sublayersSourceJSON[e];(0,h.ac)(t.layers)&&(r=e,i=t.layers,s=t.context,t.visibleLayers&&(a={visibleLayers:t.visibleLayers,context:t.context}))}const o=[d.s3.PORTAL_ITEM,d.s3.WEB_SCENE,d.s3.WEB_MAP].filter((e=>e>r&&e<=t));let n=null;for(const e of o){const{layers:t,visibleLayers:r,context:i}=this.sublayersSourceJSON[e];t&&(n={layers:t,context:i}),r&&(a={visibleLayers:r,context:i})}const y=function(e,t){const r=[],i={};return e?(e.forEach((e=>{const s=new c.Z;if(s.read(e,t),i[s.id]=s,null!=e.parentLayerId&&-1!==e.parentLayerId){const t=i[e.parentLayerId];t.sublayers||(t.sublayers=[]),t.sublayers.unshift(s)}else r.unshift(s)})),r):r}(i,s),u=new Map,p=new Set;if(n)for(const e of n.layers)u.set(e.id,e);if(a?.visibleLayers)for(const e of a.visibleLayers)p.add(e);return g(y,(e=>{n&&e.read(u.get(e.id),n.context),a&&e.read({defaultVisibility:p.has(e.id)},a.context)})),{origin:(0,d.x3)(r),sublayers:new b({items:y})}}read(e,t){super.read(e,t),this.readSublayers(e,t)}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null,e.layer=null})),this.removeHandles("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.addHandles(e.on("before-changes",(e=>{f.error(new l.Z("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return(0,i._)([(0,y.Cb)({readOnly:!0})],t.prototype,"allSublayers",void 0),(0,i._)([(0,y.Cb)({readOnly:!0,type:s.Z.ofType(c.Z)})],t.prototype,"serviceSublayers",void 0),(0,i._)([(0,y.Cb)({value:null,type:b,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],t.prototype,"sublayers",void 0),(0,i._)([(0,y.Cb)({readOnly:!0})],t.prototype,"sublayersSourceJSON",void 0),t=(0,i._)([(0,p.j)("esri.layers.mixins.SublayersOwner")],t),t}},23875:(e,t,r)=>{r.d(t,{Z:()=>z});var i,s=r(36663),a=(r(91957),r(44308)),l=(r(86004),r(45510),r(16192),r(17259),r(878),r(22836),r(50172),r(72043),r(72506),r(54021)),o=r(66341),n=r(4905),y=r(6865),u=r(70375),p=r(39994),d=r(86618),c=r(67134),h=r(68309),f=r(13802),b=r(15842),g=r(84684),m=r(3466),S=r(81977),I=r(69236),v=r(34248),w=r(40266),_=r(39835),E=r(7283),C=r(65943),L=r(95620),x=r(44269),O=r(18160),F=r(12512),T=r(28790),D=r(26732),A=r(49341),P=r(94081),V=r(86254),M=r(10743),j=r(81580),Z=r(67692),N=r(14626),R=r(10171),k=r(91772),q=r(59659);function U(e){return null!=e&&"esriSMS"===e.type}function B(e,t,r){const i=this.originIdOf(t)>=(0,C.M9)(r.origin);return{ignoreOrigin:!0,allowNull:i,enabled:!!r&&"map-image"===r.layer?.type&&(r.writeSublayerStructure||i)}}function J(e,t,r){return{enabled:!!r&&"tile"===r.layer?.type&&(r.origin&&this.originIdOf(t)>=(0,C.M9)(r.origin)||this._isOverridden(t))}}function Q(e,t,r){return{ignoreOrigin:!0,enabled:r&&r.writeSublayerStructure||!1}}function $(e,t,r){return{ignoreOrigin:!0,enabled:!!r&&(r.writeSublayerStructure||this.originIdOf(t)>=(0,C.M9)(r.origin))}}let G=0;const H=new Set;H.add("layer"),H.add("parent"),H.add("loaded"),H.add("loadStatus"),H.add("loadError"),H.add("loadWarnings");let W=i=class extends((0,b.R)((0,d.IG)(h.Z))){constructor(e){super(e),this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:t,url:r}=this;if(!t&&!r)throw new u.Z("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=t?await t.fetchSublayerInfo(this,e):(await(0,o.Z)(r,{responseType:"json",query:{f:"json"},...e})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service"}))})()),this}readCapabilities(e,t){t=t.layerDefinition||t;const{operations:{supportsQuery:r,supportsQueryAttachments:i},query:{supportsFormatPBF:s},data:{supportsAttachment:a}}=(0,V.h)(t,this.url);return{exportMap:{supportsModification:!!t.canModifyLayer},operations:{supportsQuery:r,supportsQueryAttachments:i},data:{supportsAttachment:a},query:{supportsFormatPBF:s}}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:t}=this;return{minScale:e,maxScale:t}}readMaxScaleRange(e,t){return{minScale:(t=t.layerDefinition||t).minScale??0,maxScale:t.maxScale??0}}get fieldsIndex(){return new T.Z(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields)for(const e of t.fields)if("esriFieldTypeGlobalID"===e.type)return e.name}get id(){return this._get("id")??G++}set id(e){this._get("id")!==e&&(!1!==this.layer?.capabilities?.exportMap?.supportsDynamicLayers?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,t,r,i){e&&e.length&&(t.layerDefinition={drawingInfo:{labelingInfo:e.map((e=>e.write({},i)))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((t=>t.layer=e))}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,t){return t.minScale||t.layerDefinition?.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,t){return t.maxScale||t.layerDefinition?.maxScale||0}readObjectIdFieldFromService(e,t){if((t=t.layerDefinition||t).objectIdField)return t.objectIdField;if(t.fields)for(const e of t.fields)if("esriFieldTypeOID"===e.type)return e.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,t){const r=t.layerDefinition;return 1-.01*((null!=r?.transparency?r.transparency:r?.drawingInfo?.transparency)??0)}writeOpacity(e,t,r,i){t.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,t){this.parent&&this.parent!==this.layer?t.parentLayerId=(0,E.vU)(this.parent.id):t.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{spatialReference:e}=this.layer,t="gdbVersion"in this.layer?this.layer.gdbVersion:void 0,{capabilities:r,fieldsIndex:i}=this,s=(0,p.Z)("featurelayer-pbf")&&r?.query.supportsFormatPBF,a=r?.operations?.supportsQueryAttachments??!1;return new x.Z({url:this.url,pbfSupported:s,fieldsIndex:i,gdbVersion:t,sourceSpatialReference:e,queryAttachmentsSupported:a})}set renderer(e){if(e)for(const t of e.getSymbols())if((0,n.dU)(t)){f.Z.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new j.R({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return(0,E.se)(y.Z.ofType(i),e)}writeSublayers(e,t,r){this.sublayers?.length&&(t[r]=this.sublayers.map((e=>e.id)).toArray().reverse())}readTitle(e,t){return t.layerDefinition?.name??t.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const e=t.fields.find((e=>e.name.toLowerCase()===r));e&&(r=e.name)}return r}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,t=this.source;if(!e)return null;if(this._lastParsedUrl=e,"map-layer"===t?.type)return`${e.path}/${t.mapLayerId}`;const r={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${(0,m.B7)(r)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,t,r,i){t[r]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=(0,L.vw)(this),t=new i;return(0,L.vw)(t).store=e.clone(H),this.commitProperty("url"),t._lastParsedUrl=this._lastParsedUrl,t}createPopupTemplate(e){return(0,R.eZ)(this,e)}createQuery(){return new N.Z({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const e=(await Promise.resolve().then(r.bind(r,12926))).default,{layer:t,url:i}=this;let s;if(i&&this.originIdOf("url")>C.s3.SERVICE)s=new e({url:i});else{if(!t?.parsedUrl)throw new u.Z("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const r=t.parsedUrl;s=new e({url:r.path}),r&&this.source&&("map-layer"===this.source.type?s.layerId=this.source.mapLayerId:s.dynamicDataSource=this.source)}}return null!=t?.refreshInterval&&(s.refreshInterval=t.refreshInterval),this.definitionExpression&&(s.definitionExpression=this.definitionExpression),this.floorInfo&&(s.floorInfo=(0,c.d9)(this.floorInfo)),this.originIdOf("labelingInfo")>C.s3.SERVICE&&(s.labelingInfo=(0,c.d9)(this.labelingInfo)),this.originIdOf("labelsVisible")>C.s3.DEFAULTS&&(s.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>C.s3.DEFAULTS&&(s.legendEnabled=this.legendEnabled),this.originIdOf("visible")>C.s3.DEFAULTS&&(s.visible=this.visible),this.originIdOf("minScale")>C.s3.DEFAULTS&&(s.minScale=this.minScale),this.originIdOf("maxScale")>C.s3.DEFAULTS&&(s.maxScale=this.maxScale),this.originIdOf("opacity")>C.s3.DEFAULTS&&(s.opacity=this.opacity),this.originIdOf("popupTemplate")>C.s3.DEFAULTS&&(s.popupTemplate=(0,c.d9)(this.popupTemplate)),this.originIdOf("renderer")>C.s3.SERVICE&&(s.renderer=(0,c.d9)(this.renderer)),"data-layer"===this.source?.type&&(s.dynamicDataSource=this.source.clone()),this.originIdOf("title")>C.s3.DEFAULTS&&(s.title=this.title),"map-image"===t?.type&&t.originIdOf("customParameters")>C.s3.DEFAULTS&&(s.customParameters=t.customParameters),"tile"===t?.type&&t.originIdOf("customParameters")>C.s3.DEFAULTS&&(s.customParameters=t.customParameters),s}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){const{typeIdField:t,types:r}=this;if(!t||!e)return null;const i=e.attributes?e.attributes[t]:void 0;if(null==i)return null;let s=null;return r?.some((e=>{const{id:t}=e;return null!=t&&(t.toString()===i.toString()&&(s=e),!!s)})),s}getFieldDomain(e,t){const r=t?.feature,i=this.getFeatureType(r);if(i){const t=i.domains&&i.domains[e];if(t&&"inherited"!==t.type)return t}return this._getLayerDomain(e)}async queryAttachments(e,t){await this.load(),e=Z.Z.from(e);const r=this.capabilities;if(!r?.data?.supportsAttachment)throw new u.Z("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:s,globalIds:a,num:l,size:o,start:n,where:y}=e;if(!r?.operations?.supportsQueryAttachments&&(i?.length>0||a?.length>0||o?.length>0||l||n||y))throw new u.Z("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(s?.length||a?.length||y))throw new u.Z("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return this.queryTask.executeAttachmentQuery(e,t)}async queryFeatures(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new u.Z("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new u.Z("queryFeatures:not-supported","this layer has no url.");const r=await this.queryTask.execute(e,{...t,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(r?.features)for(const e of r.features)e.sourceLayer=this;return r}toExportImageJSON(e){const t={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},r=(0,g._)(e,this.definitionExpression);null!=r&&(t.definitionExpression=r);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((e,t)=>(e[t]=this.originIdOf(t),e)),{}),s=Object.keys(i).some((e=>i[e]>C.s3.SERVICE));if(s){const e=t.drawingInfo={};if(i.renderer>C.s3.SERVICE&&(e.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>C.s3.SERVICE&&(e.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>C.s3.SERVICE)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some((e=>!e.labelPlacement))&&f.Z.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let t=this.labelingInfo;null!=this.geometryType&&(t=(0,A.a)(this.labelingInfo,q.M.toJSON(this.geometryType))),e.showLabels=!0,e.labelingInfo=t.filter((e=>e.labelPlacement)).map((e=>e.toJSON({origin:"service",layer:this.layer})))}else e.showLabels=!1;i.opacity>C.s3.SERVICE&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return t}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,(e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.outline?.color?e.color=e.outline.color:e.color=[0,0,0,0])}))}_forEachSimpleMarkerSymbols(e,t){if(e){const r=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const e of r)U(e.symbol)&&t(e.symbol);"symbol"in e&&U(e.symbol)&&t(e.symbol),"defaultSymbol"in e&&U(e.defaultSymbol)&&t(e.defaultSymbol)}}_setAndNotifyLayer(e,t){const r=this.layer,i=this._get(e);let s,a;switch(e){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",a="supportsModification"}const l=(0,L.vw)(this).getDefaultOrigin();if("service"!==l){if(s&&!1===this.layer?.capabilities?.exportMap?.[s])return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(a&&!1===this.capabilities?.exportMap[a])return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${a}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,t),"service"!==l&&i!==t&&r&&r.emit&&r.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,t){t&&(t.forEach((e=>{e.parent=null,e.layer=null})),this.removeAllHandles()),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this.addHandles([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null})),e.on("before-changes",(e=>{const t=this.layer?.capabilities?.exportMap?.supportsSublayersChanges;null==t||t||(f.Z.getLogger(this).error(new u.Z("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())}))]))}_logLockedError(e,t){const{layer:r,declaredClass:i}=this;f.Z.getLogger(i).error(new u.Z("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${r?.id}'`,{reason:t,sublayer:this,layer:r}))}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}};W.test={isMapImageLayerOverridePolicy:e=>e===Q||e===B,isTileImageLayerOverridePolicy:e=>e===J},(0,s._)([(0,S.Cb)({readOnly:!0})],W.prototype,"capabilities",void 0),(0,s._)([(0,v.r)("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],W.prototype,"readCapabilities",null),(0,s._)([(0,S.Cb)()],W.prototype,"defaultPopupTemplate",null),(0,s._)([(0,S.Cb)({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:B}}})],W.prototype,"definitionExpression",null),(0,s._)([(0,S.Cb)({readOnly:!0})],W.prototype,"effectiveScaleRange",null),(0,s._)([(0,v.r)("service","maxScaleRange",["minScale","maxScale"])],W.prototype,"readMaxScaleRange",null),(0,s._)([(0,S.Cb)({type:[F.Z],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],W.prototype,"fields",void 0),(0,s._)([(0,S.Cb)({readOnly:!0})],W.prototype,"fieldsIndex",null),(0,s._)([(0,S.Cb)({type:P.Z,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:B},origins:{"web-scene":{read:!1,write:!1}}}})],W.prototype,"floorInfo",null),(0,s._)([(0,S.Cb)({type:k.Z,json:{read:{source:"layerDefinition.extent"}}})],W.prototype,"fullExtent",void 0),(0,s._)([(0,S.Cb)({type:q.M.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:q.M.read}}}}})],W.prototype,"geometryType",void 0),(0,s._)([(0,S.Cb)({type:String})],W.prototype,"globalIdField",void 0),(0,s._)([(0,v.r)("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],W.prototype,"readGlobalIdFieldFromService",null),(0,s._)([(0,S.Cb)({type:E.z8,json:{write:{ignoreOrigin:!0}}})],W.prototype,"id",null),(0,s._)([(0,S.Cb)({value:null,type:[D.Z],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:Q}}})],W.prototype,"labelingInfo",null),(0,s._)([(0,_.c)("labelingInfo")],W.prototype,"writeLabelingInfo",null),(0,s._)([(0,S.Cb)({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:Q}}})],W.prototype,"labelsVisible",null),(0,s._)([(0,S.Cb)({value:null})],W.prototype,"layer",null),(0,s._)([(0,S.Cb)({type:String,json:{write:{overridePolicy:J}}})],W.prototype,"layerItemId",void 0),(0,s._)([(0,S.Cb)({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:$}}})],W.prototype,"legendEnabled",void 0),(0,s._)([(0,S.Cb)({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],W.prototype,"listMode",null),(0,s._)([(0,S.Cb)({type:Number,value:0,json:{write:{overridePolicy:Q}}})],W.prototype,"minScale",null),(0,s._)([(0,v.r)("minScale",["minScale","layerDefinition.minScale"])],W.prototype,"readMinScale",null),(0,s._)([(0,S.Cb)({type:Number,value:0,json:{write:{overridePolicy:Q}}})],W.prototype,"maxScale",null),(0,s._)([(0,v.r)("maxScale",["maxScale","layerDefinition.maxScale"])],W.prototype,"readMaxScale",null),(0,s._)([(0,S.Cb)({type:String})],W.prototype,"objectIdField",void 0),(0,s._)([(0,v.r)("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],W.prototype,"readObjectIdFieldFromService",null),(0,s._)([(0,S.Cb)({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:Q}}})],W.prototype,"opacity",null),(0,s._)([(0,v.r)("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],W.prototype,"readOpacity",null),(0,s._)([(0,_.c)("opacity")],W.prototype,"writeOpacity",null),(0,s._)([(0,S.Cb)({json:{type:E.z8,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:Q}}})],W.prototype,"parent",void 0),(0,s._)([(0,_.c)("parent")],W.prototype,"writeParent",null),(0,s._)([(0,S.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:$,writer(e,t,r){t[r]=!e}}}})],W.prototype,"popupEnabled",void 0),(0,s._)([(0,S.Cb)({type:a.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:$}}})],W.prototype,"popupTemplate",void 0),(0,s._)([(0,S.Cb)({readOnly:!0})],W.prototype,"queryTask",null),(0,s._)([(0,S.Cb)({types:l.A,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Q},origins:{"web-scene":{types:l.o,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:Q}}}}})],W.prototype,"renderer",null),(0,s._)([(0,S.Cb)({types:{key:"type",base:null,typeMap:{"data-layer":M.n,"map-layer":j.R}},cast(e){if(e){if("mapLayerId"in e)return(0,E.TJ)(j.R,e);if("dataSource"in e)return(0,E.TJ)(M.n,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:Q}}})],W.prototype,"source",null),(0,s._)([(0,S.Cb)()],W.prototype,"sourceJSON",void 0),(0,s._)([(0,S.Cb)({value:null,json:{type:[E.z8],write:{target:"subLayerIds",allowNull:!0,overridePolicy:Q}}})],W.prototype,"sublayers",null),(0,s._)([(0,I.p)("sublayers")],W.prototype,"castSublayers",null),(0,s._)([(0,_.c)("sublayers")],W.prototype,"writeSublayers",null),(0,s._)([(0,S.Cb)({type:String,json:{name:"name",write:{overridePolicy:$}}})],W.prototype,"title",void 0),(0,s._)([(0,v.r)("service","title",["name","layerDefinition.name"])],W.prototype,"readTitle",null),(0,s._)([(0,S.Cb)({type:String})],W.prototype,"typeIdField",void 0),(0,s._)([(0,S.Cb)({json:{read:!1},readOnly:!0,value:"sublayer"})],W.prototype,"type",void 0),(0,s._)([(0,v.r)("typeIdField",["layerDefinition.typeIdField"])],W.prototype,"readTypeIdField",null),(0,s._)([(0,S.Cb)({type:[O.Z],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],W.prototype,"types",void 0),(0,s._)([(0,S.Cb)({type:String,json:{name:"layerUrl",write:{overridePolicy:J}}})],W.prototype,"url",null),(0,s._)([(0,S.Cb)({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:Q}}})],W.prototype,"visible",null),(0,s._)([(0,_.c)("visible")],W.prototype,"writeVisible",null),W=i=(0,s._)([(0,w.j)("esri.layers.support.Sublayer")],W);const z=W},4452:(e,t,r)=>{r.d(t,{V:()=>l,g:()=>a});var i=r(70375),s=r(33926);async function a(e,t,r){let a;try{a=await createImageBitmap(e)}catch(e){throw new i.Z("request:server",`Unable to load ${t}`,{url:t,error:e})}return(0,s.k_)(r),a}async function l(e,t,r,a,l){let o;try{o=await createImageBitmap(e)}catch(e){throw new i.Z("request:server",`Unable to load tile ${t}/${r}/${a}`,{error:e,level:t,row:r,col:a})}return(0,s.k_)(l),o}},93698:(e,t,r)=>{r.d(t,{FN:()=>a,QV:()=>s,ac:()=>o});var i=r(65943);function s(e,t,r){const i=t.flatten((({sublayers:e})=>e)).length;return i!==e.length||!!e.some((e=>e.originIdOf("minScale")>r||e.originIdOf("maxScale")>r||e.originIdOf("renderer")>r||e.originIdOf("labelingInfo")>r||e.originIdOf("opacity")>r||e.originIdOf("labelsVisible")>r||e.originIdOf("source")>r))||!l(e,t)}function a(e,t,r){return!!e.some((e=>{const t=e.source;return!(!t||"map-layer"===t.type&&t.mapLayerId===e.id&&(null==t.gdbVersion||t.gdbVersion===r))||e.originIdOf("renderer")>i.s3.SERVICE||e.originIdOf("labelingInfo")>i.s3.SERVICE||e.originIdOf("opacity")>i.s3.SERVICE||e.originIdOf("labelsVisible")>i.s3.SERVICE}))||!l(e,t)}function l(e,t){if(!e?.length||null==t)return!0;const r=t.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).map((e=>e.id)).toArray();if(e.length>r.length)return!1;let i=0;const s=r.length;for(const{id:t}of e){for(;i<s&&r[i]!==t;)i++;if(i>=s)return!1}return!0}function o(e){return!!e&&e.some((e=>null!=e.minScale||null!=e.layerDefinition?.minScale))}}}]);